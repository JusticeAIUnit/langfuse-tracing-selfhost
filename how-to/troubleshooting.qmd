---
title: "Troubleshooting Guide"
categories: ["Debugging", "Infrastructure"]
---

This guide helps resolve common issues with LangFuse deployment and usage.

## Deployment Issues

### Database Connection Problems

**Problem**: `Error: Connection refused` or `timeout`

**Solutions**:
```bash
# Check database status
az postgres flexible-server show --resource-group langfuse-rg --name your-server

# Test connection
psql "postgresql://username:password@host:5432/database"

# Check firewall rules
az postgres flexible-server firewall-rule list --resource-group langfuse-rg --name your-server
```

### Container Startup Issues

**Problem**: Container fails to start or exits immediately

**Solutions**:
```bash
# Check container logs
az container logs --resource-group langfuse-rg --name langfuse-app

# Common issues:
# 1. Missing environment variables
# 2. Invalid DATABASE_URL format
# 3. Insufficient memory allocation
```

### SSL Certificate Problems

**Problem**: SSL certificate errors or insecure connections

**Solutions**:
```bash
# For Azure Container Instances with custom domain
az network application-gateway ssl-cert create \
  --resource-group langfuse-rg \
  --gateway-name langfuse-gateway \
  --name langfuse-cert \
  --cert-file certificate.pfx \
  --cert-password your-password
```

## Authentication Issues

### Azure AD Login Problems

**Problem**: Users cannot authenticate with Azure AD

**Checklist**:
1. Verify Azure AD app registration
2. Check redirect URLs are correct
3. Confirm tenant ID is correct
4. Validate client secret hasn't expired

```bash
# Check Azure AD app registration
az ad app show --id your-app-id

# Test authentication endpoint
curl https://login.microsoftonline.com/your-tenant-id/v2.0/.well-known/openid-configuration
```

### Session Management Issues

**Problem**: Users get logged out frequently

**Solutions**:
```bash
# Check session configuration
NEXTAUTH_SESSION_MAX_AGE=2592000  # 30 days
NEXTAUTH_SESSION_UPDATE_AGE=86400  # 24 hours

# Verify NEXTAUTH_SECRET is set and consistent
echo $NEXTAUTH_SECRET
```

## Performance Issues

### Slow Query Performance

**Problem**: LangFuse dashboard loads slowly

**Solutions**:
```bash
# Check database performance
az postgres flexible-server show --resource-group langfuse-rg --name your-server

# Upgrade database tier if needed
az postgres flexible-server update \
  --resource-group langfuse-rg \
  --name your-server \
  --sku-name Standard_D2s_v3
```

### High Memory Usage

**Problem**: Container uses excessive memory

**Solutions**:
```bash
# Increase container memory
az container update \
  --resource-group langfuse-rg \
  --name langfuse-app \
  --memory 4

# Or optimize database connections
DATABASE_CONNECTION_POOL_SIZE=5
```

## API Integration Issues

### Connection Timeouts

**Problem**: SDK connections timeout

**Solutions**:
```python
# Increase timeout in Python SDK
from langfuse import Langfuse

langfuse = Langfuse(
    public_key="your-key",
    secret_key="your-secret",
    host="<YOUR_LANGFUSE_HOST>",
    timeout=30  # Increase timeout
)
```

### Authentication Failures

**Problem**: `401 Unauthorized` errors

**Checklist**:
1. Verify public and secret keys are correct
2. Check key permissions in LangFuse dashboard
3. Ensure host URL is correct
4. Verify no trailing slashes in host URL

```python
# Debug authentication
import os
print(f"Host: {os.getenv('LANGFUSE_HOST')}")
print(f"Public Key: {os.getenv('LANGFUSE_PUBLIC_KEY')[:8]}...")
print(f"Secret Key: {'*' * len(os.getenv('LANGFUSE_SECRET_KEY'))}")
```

**Advanced Debugging**: If the Python SDK isn't providing clear error messages, try **[Raw HTTP Requests](raw-requests.qmd)** to see exact HTTP responses and debug authentication issues.

### Rate Limiting

**Problem**: `429 Too Many Requests` errors

**Solutions**:
```python
# Implement retry logic
from langfuse import Langfuse
import time

def retry_request(func, max_retries=3):
    for attempt in range(max_retries):
        try:
            return func()
        except Exception as e:
            if "429" in str(e) and attempt < max_retries - 1:
                time.sleep(2 ** attempt)  # Exponential backoff
                continue
            raise
```

## Monitoring and Debugging

### Application Insights Integration

**Problem**: No telemetry data in Application Insights

**Solutions**:
```bash
# Verify Application Insights connection
az monitor app-insights component show \
  --app langfuse-insights \
  --resource-group langfuse-rg

# Check connection string format
APPLICATIONINSIGHTS_CONNECTION_STRING="InstrumentationKey=your-key;IngestionEndpoint=https://your-region.in.applicationinsights.azure.com/"
```

### Log Analysis

**Problem**: Need to analyze application logs

**Solutions**:
```bash
# Container logs
az container logs --resource-group langfuse-rg --name langfuse-app --tail 100

# Database logs
az postgres flexible-server logs list \
  --resource-group langfuse-rg \
  --name your-server

# Application Insights queries
az monitor log-analytics query \
  --workspace langfuse-workspace \
  --analytics-query "requests | where timestamp > ago(1h) | order by timestamp desc"
```

## Data Issues

### Missing Traces

**Problem**: Traces not appearing in dashboard

**Checklist**:
1. Verify SDK is flushing traces
2. Check for network connectivity
3. Confirm correct project/environment
4. Validate timestamp formats

```python
# Ensure traces are flushed
langfuse.flush()

# For async applications
await langfuse.flushAsync()
```

### Database Migration Issues

**Problem**: Database schema out of date

**Solutions**:
```bash
# Check current schema version
psql $DATABASE_URL -c "SELECT version FROM schema_migrations ORDER BY version DESC LIMIT 1;"

# Manual migration (if needed)
# Contact support for migration scripts
```

## Environment-Specific Issues

### Development Environment

**Problem**: Local development setup issues

**Solutions**:
```bash
# Use Docker for local development
docker run -d \
  --name langfuse-local \
  -p 3000:3000 \
  -e DATABASE_URL=postgresql://postgres:password@localhost:5432/langfuse \
  -e NEXTAUTH_SECRET=dev-secret \
  -e SALT=dev-salt \
  langfuse/langfuse:latest
```

### Production Environment

**Problem**: Production deployment issues

**Checklist**:
1. All environment variables set correctly
2. SSL certificates valid
3. Database backups configured
4. Monitoring alerts configured
5. Security groups properly configured

## Getting Help

### Self-Service Resources

1. **Check the logs** - Most issues can be diagnosed from logs
2. **Review configuration** - Verify all environment variables
3. **Test connectivity** - Use `curl` or `ping` to test endpoints
4. **Check Azure status** - Verify Azure services are operational

### Support Channels

1. **GitHub Issues** - For bugs and feature requests
2. **Internal Support** - Contact Justice AI team
3. **Azure Support** - For Azure-specific issues
4. **LangFuse Community** - For general questions

### Useful Commands

```bash
# Health check
curl -f https://<YOUR_LANGFUSE_HOST>/api/health

# Database connectivity
pg_isready -h your-server.postgres.database.azure.com -p 5432

# Container resource usage
az container show --resource-group langfuse-rg --name langfuse-app --query containers[0].resources

# SSL certificate check
openssl s_client -connect <YOUR_LANGFUSE_HOST>:443 -servername your-langfuse-host.com
```

## Next Steps

- **[Azure Deployment Guide](azure.qmd)** - Complete deployment instructions
- **[Environment Configuration](config.qmd)** - Detailed configuration options

---
